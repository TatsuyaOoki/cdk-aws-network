// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppStackTest Snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-034362045434-ap-northeast-1",
          "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "Ec2AppAlbLogBucket1DE66F6A",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DataAppBackupPlan755E8956": {
      "Properties": {
        "BackupPlan": {
          "BackupPlanName": "BackupPlan",
          "BackupPlanRule": [
            {
              "CompletionWindowMinutes": 1440,
              "Lifecycle": {
                "DeleteAfterDays": 2,
              },
              "RuleName": "BackupPlanRule0",
              "ScheduleExpression": "cron(00 16 * * ? *)",
              "StartWindowMinutes": 60,
              "TargetBackupVault": {
                "Fn::GetAtt": [
                  "DataAppBackupVault86641FB0",
                  "BackupVaultName",
                ],
              },
            },
          ],
        },
      },
      "Type": "AWS::Backup::BackupPlan",
    },
    "DataAppBackupVault86641FB0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BackupVaultName": "AppStackDataAppBackupVault58443D26",
      },
      "Type": "AWS::Backup::BackupVault",
      "UpdateReplacePolicy": "Delete",
    },
    "DataAppRdsInstance0271E82E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AllocatedStorage": "20",
        "AvailabilityZone": {
          "Fn::GetAtt": [
            "Ec2ApplinuxInstance9ED8C3EE",
            "AvailabilityZone",
          ],
        },
        "BackupRetentionPeriod": 1,
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t3.micro",
        "DBParameterGroupName": {
          "Ref": "DataAppRdsInstanceParameterGroup8A2AB451",
        },
        "DBSubnetGroupName": {
          "Ref": "DataAppRdsInstanceSubnetGroup97B82B35",
        },
        "Engine": "mysql",
        "EngineVersion": "8.0.40",
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "DataAppRdsInstanceSecretC4D01B9A",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "DataAppRdsInstanceSecretC4D01B9A",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "MultiAZ": false,
        "PreferredBackupWindow": "15:25-15:55",
        "PreferredMaintenanceWindow": "Tue:16:05-Tue:16:35",
        "PubliclyAccessible": false,
        "StorageEncrypted": true,
        "StorageType": "gp2",
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "DataAppRdsInstanceSecurityGroup7925E393",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DataAppRdsInstanceParameterGroup8A2AB451": {
      "Properties": {
        "Description": "Parameter group for mysql8.0",
        "Family": "mysql8.0",
        "Parameters": {
          "character_set_client": "utf8mb4",
          "character_set_connection": "utf8mb4",
          "character_set_database": "utf8mb4",
          "character_set_results": "utf8mb4",
          "character_set_server": "utf8mb4",
          "collation_connection": "utf8mb4_general_ci",
          "collation_server": "utf8mb4_general_ci",
          "innodb_purge_threads": "4",
          "time_zone": "Asia/Tokyo",
        },
      },
      "Type": "AWS::RDS::DBParameterGroup",
    },
    "DataAppRdsInstanceSecretAttachment8E55C81B": {
      "Properties": {
        "SecretId": {
          "Ref": "DataAppRdsInstanceSecretC4D01B9A",
        },
        "TargetId": {
          "Ref": "DataAppRdsInstance0271E82E",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "DataAppRdsInstanceSecretC4D01B9A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{"username":"admin"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "DataAppRdsInstanceSecurityGroup7925E393": {
      "Properties": {
        "GroupDescription": "Security group for RdsInstance database",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "NetworkVpc7FB7348F",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DataAppRdsInstanceSecurityGroupfromAppStackEc2ApplinuxInstanceInstanceSecurityGroup9B4566173306C5D1D3F6": {
      "Properties": {
        "Description": "from AppStackEc2ApplinuxInstanceInstanceSecurityGroup9B456617:3306",
        "FromPort": 3306,
        "GroupId": {
          "Fn::GetAtt": [
            "DataAppRdsInstanceSecurityGroup7925E393",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "Ec2ApplinuxInstanceInstanceSecurityGroup3481696A",
            "GroupId",
          ],
        },
        "ToPort": 3306,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DataAppRdsInstanceSubnetGroup97B82B35": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for RdsInstance database",
        "SubnetIds": [
          {
            "Ref": "NetworkVpcProtectedSubnet1Subnet3489B8A9",
          },
          {
            "Ref": "NetworkVpcProtectedSubnet2SubnetB311854E",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "DataAppbackupSelectionF55A2C86": {
      "Properties": {
        "BackupPlanId": {
          "Fn::GetAtt": [
            "DataAppBackupPlan755E8956",
            "BackupPlanId",
          ],
        },
        "BackupSelection": {
          "IamRoleArn": {
            "Fn::GetAtt": [
              "DataAppbackupSelectionRole9F7992EF",
              "Arn",
            ],
          },
          "ListOfTags": [
            {
              "ConditionKey": "AWSBackup",
              "ConditionType": "STRINGEQUALS",
              "ConditionValue": "true",
            },
            {
              "ConditionKey": "Environment",
              "ConditionType": "STRINGEQUALS",
              "ConditionValue": "Production",
            },
          ],
          "SelectionName": "backupSelection",
        },
      },
      "Type": "AWS::Backup::BackupSelection",
    },
    "DataAppbackupSelectionRole9F7992EF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "backup.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Ec2AppAlb7DEFB31D": {
      "DependsOn": [
        "Ec2AppAlbLogBucketPolicy6C6759B4",
        "NetworkVpcPublicSubnet1DefaultRoute31EC04EC",
        "NetworkVpcPublicSubnet1RouteTableAssociation643926C7",
        "NetworkVpcPublicSubnet2DefaultRoute0CF082AB",
        "NetworkVpcPublicSubnet2RouteTableAssociationC662643B",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
          {
            "Key": "access_logs.s3.enabled",
            "Value": "true",
          },
          {
            "Key": "access_logs.s3.bucket",
            "Value": {
              "Ref": "Ec2AppAlbLogBucket1DE66F6A",
            },
          },
          {
            "Key": "access_logs.s3.prefix",
            "Value": "",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "Ec2AppAlbSecurityGroup07F166AE",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "NetworkVpcPublicSubnet1Subnet36933139",
          },
          {
            "Ref": "NetworkVpcPublicSubnet2SubnetC427CCE0",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "Ec2AppAlbListener81DBCF23": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "Ec2AppAlbListenerAlbTargetsGroup09812AB2",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "Ec2AppAlb7DEFB31D",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "Ec2AppAlbListenerAlbTargetsGroup09812AB2": {
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "ProtocolVersion": "HTTP1",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "Targets": [
          {
            "Id": {
              "Ref": "Ec2ApplinuxInstance9ED8C3EE",
            },
            "Port": 80,
          },
        ],
        "VpcId": {
          "Ref": "NetworkVpc7FB7348F",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "Ec2AppAlbLogBucket1DE66F6A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LifecycleConfiguration": {
          "Rules": [
            {
              "ExpirationInDays": 30,
              "NoncurrentVersionExpiration": {
                "NoncurrentDays": 30,
              },
              "Status": "Enabled",
            },
          ],
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "Ec2AppAlbLogBucketAutoDeleteObjectsCustomResourceF798F033": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "Ec2AppAlbLogBucketPolicy6C6759B4",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "Ec2AppAlbLogBucket1DE66F6A",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "Ec2AppAlbLogBucketPolicy6C6759B4": {
      "Properties": {
        "Bucket": {
          "Ref": "Ec2AppAlbLogBucket1DE66F6A",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Ec2AppAlbLogBucket1DE66F6A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Ec2AppAlbLogBucket1DE66F6A",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::582318560864:root",
                    ],
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "Ec2AppAlbLogBucket1DE66F6A",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/034362045434/*",
                  ],
                ],
              },
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "Ec2AppAlbLogBucket1DE66F6A",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/034362045434/*",
                  ],
                ],
              },
            },
            {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "Ec2AppAlbLogBucket1DE66F6A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "Ec2AppAlbSecurityGroup07F166AE": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB AppStackEc2AppAlb21E654CF",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "NetworkVpc7FB7348F",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "Ec2AppAlbSecurityGrouptoAppStackEc2ApplinuxInstanceInstanceSecurityGroup9B456617806F2EEF4A": {
      "Properties": {
        "Description": "to AppStackEc2ApplinuxInstanceInstanceSecurityGroup9B456617:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "Ec2ApplinuxInstanceInstanceSecurityGroup3481696A",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "Ec2AppAlbSecurityGroup07F166AE",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "Ec2AppAutoStart39D3F3BE": {
      "Properties": {
        "FlexibleTimeWindow": {
          "Mode": "OFF",
        },
        "ScheduleExpression": "cron(0 9 ? * MON-FRI *)",
        "ScheduleExpressionTimezone": "Asia/Tokyo",
        "State": "ENABLED",
        "Target": {
          "Arn": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":scheduler:::aws-sdk:ec2:startInstances",
              ],
            ],
          },
          "Input": {
            "Fn::Join": [
              "",
              [
                "{"InstanceIds":["",
                {
                  "Ref": "Ec2ApplinuxInstance9ED8C3EE",
                },
                ""]}",
              ],
            ],
          },
          "RetryPolicy": {
            "MaximumEventAgeInSeconds": 86400,
            "MaximumRetryAttempts": 185,
          },
          "RoleArn": {
            "Fn::GetAtt": [
              "SchedulerRoleForTarget2816ab01137F93",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Scheduler::Schedule",
    },
    "Ec2AppAutoStop65C901B7": {
      "Properties": {
        "FlexibleTimeWindow": {
          "Mode": "OFF",
        },
        "ScheduleExpression": "cron(0 21 ? * MON-FRI *)",
        "ScheduleExpressionTimezone": "Asia/Tokyo",
        "State": "ENABLED",
        "Target": {
          "Arn": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":scheduler:::aws-sdk:ec2:stopInstances",
              ],
            ],
          },
          "Input": {
            "Fn::Join": [
              "",
              [
                "{"InstanceIds":["",
                {
                  "Ref": "Ec2ApplinuxInstance9ED8C3EE",
                },
                ""]}",
              ],
            ],
          },
          "RetryPolicy": {
            "MaximumEventAgeInSeconds": 86400,
            "MaximumRetryAttempts": 185,
          },
          "RoleArn": {
            "Fn::GetAtt": [
              "SchedulerRoleForTargetd31fb558B65FB3",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Scheduler::Schedule",
    },
    "Ec2AppEic41EA4C20": {
      "Properties": {
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "Ec2AppEicSg35A800DC",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "NetworkVpcProtectedSubnet1Subnet3489B8A9",
        },
      },
      "Type": "AWS::EC2::InstanceConnectEndpoint",
    },
    "Ec2AppEicSg35A800DC": {
      "Properties": {
        "GroupDescription": "AppStack/Ec2App/EicSg",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "NetworkVpc7FB7348F",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "Ec2AppInstanceRole3F9B9B92": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
          "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
        ],
        "Path": "/",
      },
      "Type": "AWS::IAM::Role",
    },
    "Ec2AppKeyPairE6956868": {
      "Properties": {
        "KeyFormat": "pem",
        "KeyName": "AppStackEc2AppKeyPair7E6F99A6",
        "KeyType": "rsa",
      },
      "Type": "AWS::EC2::KeyPair",
    },
    "Ec2ApplinuxInstance9ED8C3EE": {
      "DependsOn": [
        "Ec2AppInstanceRole3F9B9B92",
      ],
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "Encrypted": true,
              "VolumeSize": 20,
              "VolumeType": "gp3",
            },
          },
        ],
        "IamInstanceProfile": {
          "Ref": "Ec2ApplinuxInstanceInstanceProfileDF1E0570",
        },
        "ImageId": "dummy-value-for-/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64",
        "InstanceType": "t3.micro",
        "KeyName": {
          "Ref": "Ec2AppKeyPairE6956868",
        },
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "Ec2ApplinuxInstanceInstanceSecurityGroup3481696A",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "NetworkVpcPrivateSubnet1Subnet6DD86AE6",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "AppStack/Ec2App/linuxInstance",
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash
sudo dnf -y install httpd
echo "<h1>Hello from $(hostname)</h1>" | sudo tee /var/www/html/index.html > /dev/null
sudo chown apache:apache /var/www/html/index.html
sudo systemctl enable httpd
sudo systemctl start httpd",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "Ec2ApplinuxInstanceInstanceProfileDF1E0570": {
      "Properties": {
        "Roles": [
          {
            "Ref": "Ec2AppInstanceRole3F9B9B92",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "Ec2ApplinuxInstanceInstanceSecurityGroup3481696A": {
      "Properties": {
        "GroupDescription": "AppStack/Ec2App/linuxInstance/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL ICMP",
            "FromPort": -1,
            "IpProtocol": "icmp",
            "ToPort": -1,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "AppStack/Ec2App/linuxInstance",
          },
        ],
        "VpcId": {
          "Ref": "NetworkVpc7FB7348F",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "Ec2ApplinuxInstanceInstanceSecurityGroupfromAppStackEc2AppAlbSecurityGroupF4E77B808078B9BA1D": {
      "Properties": {
        "Description": "from AppStackEc2AppAlbSecurityGroupF4E77B80:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "Ec2ApplinuxInstanceInstanceSecurityGroup3481696A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "Ec2AppAlbSecurityGroup07F166AE",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "Ec2ApplinuxInstanceInstanceSecurityGroupfromAppStackEc2AppEicSg2FA6E47C22281F0DFD": {
      "Properties": {
        "Description": "from AppStackEc2AppEicSg2FA6E47C:22",
        "FromPort": 22,
        "GroupId": {
          "Fn::GetAtt": [
            "Ec2ApplinuxInstanceInstanceSecurityGroup3481696A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "Ec2AppEicSg35A800DC",
            "GroupId",
          ],
        },
        "ToPort": 22,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "NetworkVpc7FB7348F": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AppStack/Network/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "NetworkVpcIGW6BEA7B02": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AppStack/Network/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "NetworkVpcPrivateSubnet1DefaultRoute08635105": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "NetworkVpcPublicSubnet1NATGateway64781A21",
        },
        "RouteTableId": {
          "Ref": "NetworkVpcPrivateSubnet1RouteTable7D7AA3CD",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "NetworkVpcPrivateSubnet1RouteTable7D7AA3CD": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AppStack/Network/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "NetworkVpc7FB7348F",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "NetworkVpcPrivateSubnet1RouteTableAssociation327CA62F": {
      "Properties": {
        "RouteTableId": {
          "Ref": "NetworkVpcPrivateSubnet1RouteTable7D7AA3CD",
        },
        "SubnetId": {
          "Ref": "NetworkVpcPrivateSubnet1Subnet6DD86AE6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "NetworkVpcPrivateSubnet1Subnet6DD86AE6": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "AppStack/Network/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "NetworkVpc7FB7348F",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "NetworkVpcPrivateSubnet2DefaultRouteA15DC6D5": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "NetworkVpcPublicSubnet1NATGateway64781A21",
        },
        "RouteTableId": {
          "Ref": "NetworkVpcPrivateSubnet2RouteTableC48862D1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "NetworkVpcPrivateSubnet2RouteTableAssociation89A2F1E8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "NetworkVpcPrivateSubnet2RouteTableC48862D1",
        },
        "SubnetId": {
          "Ref": "NetworkVpcPrivateSubnet2Subnet1BDBE877",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "NetworkVpcPrivateSubnet2RouteTableC48862D1": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AppStack/Network/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "NetworkVpc7FB7348F",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "NetworkVpcPrivateSubnet2Subnet1BDBE877": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "AppStack/Network/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "NetworkVpc7FB7348F",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "NetworkVpcProtectedSubnet1RouteTable483028AB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AppStack/Network/Vpc/ProtectedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "NetworkVpc7FB7348F",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "NetworkVpcProtectedSubnet1RouteTableAssociationC3011695": {
      "Properties": {
        "RouteTableId": {
          "Ref": "NetworkVpcProtectedSubnet1RouteTable483028AB",
        },
        "SubnetId": {
          "Ref": "NetworkVpcProtectedSubnet1Subnet3489B8A9",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "NetworkVpcProtectedSubnet1Subnet3489B8A9": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.4.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Protected",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "AppStack/Network/Vpc/ProtectedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "NetworkVpc7FB7348F",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "NetworkVpcProtectedSubnet2RouteTable2FC531EB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AppStack/Network/Vpc/ProtectedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "NetworkVpc7FB7348F",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "NetworkVpcProtectedSubnet2RouteTableAssociation2B591BC3": {
      "Properties": {
        "RouteTableId": {
          "Ref": "NetworkVpcProtectedSubnet2RouteTable2FC531EB",
        },
        "SubnetId": {
          "Ref": "NetworkVpcProtectedSubnet2SubnetB311854E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "NetworkVpcProtectedSubnet2SubnetB311854E": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.5.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Protected",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "AppStack/Network/Vpc/ProtectedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "NetworkVpc7FB7348F",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "NetworkVpcPublicSubnet1DefaultRoute31EC04EC": {
      "DependsOn": [
        "NetworkVpcVPCGW8F3799B5",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "NetworkVpcIGW6BEA7B02",
        },
        "RouteTableId": {
          "Ref": "NetworkVpcPublicSubnet1RouteTable30235CE2",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "NetworkVpcPublicSubnet1EIPE0D52090": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AppStack/Network/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "NetworkVpcPublicSubnet1NATGateway64781A21": {
      "DependsOn": [
        "NetworkVpcPublicSubnet1DefaultRoute31EC04EC",
        "NetworkVpcPublicSubnet1RouteTableAssociation643926C7",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "NetworkVpcPublicSubnet1EIPE0D52090",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "NetworkVpcPublicSubnet1Subnet36933139",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "AppStack/Network/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "NetworkVpcPublicSubnet1RouteTable30235CE2": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AppStack/Network/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "NetworkVpc7FB7348F",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "NetworkVpcPublicSubnet1RouteTableAssociation643926C7": {
      "Properties": {
        "RouteTableId": {
          "Ref": "NetworkVpcPublicSubnet1RouteTable30235CE2",
        },
        "SubnetId": {
          "Ref": "NetworkVpcPublicSubnet1Subnet36933139",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "NetworkVpcPublicSubnet1Subnet36933139": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "AppStack/Network/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "NetworkVpc7FB7348F",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "NetworkVpcPublicSubnet2DefaultRoute0CF082AB": {
      "DependsOn": [
        "NetworkVpcVPCGW8F3799B5",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "NetworkVpcIGW6BEA7B02",
        },
        "RouteTableId": {
          "Ref": "NetworkVpcPublicSubnet2RouteTable0FACEBB2",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "NetworkVpcPublicSubnet2RouteTable0FACEBB2": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AppStack/Network/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "NetworkVpc7FB7348F",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "NetworkVpcPublicSubnet2RouteTableAssociationC662643B": {
      "Properties": {
        "RouteTableId": {
          "Ref": "NetworkVpcPublicSubnet2RouteTable0FACEBB2",
        },
        "SubnetId": {
          "Ref": "NetworkVpcPublicSubnet2SubnetC427CCE0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "NetworkVpcPublicSubnet2SubnetC427CCE0": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "AppStack/Network/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "NetworkVpc7FB7348F",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "NetworkVpcVPCGW8F3799B5": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "NetworkVpcIGW6BEA7B02",
        },
        "VpcId": {
          "Ref": "NetworkVpc7FB7348F",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "SchedulerRoleForTarget2816ab01137F93": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "aws:SourceAccount": "034362045434",
                  "aws:SourceArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":scheduler:ap-northeast-1:034362045434:schedule-group/default",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "scheduler.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SchedulerRoleForTarget2816abDefaultPolicy12BF43C9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:StartInstances",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SchedulerRoleForTarget2816abDefaultPolicy12BF43C9",
        "Roles": [
          {
            "Ref": "SchedulerRoleForTarget2816ab01137F93",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SchedulerRoleForTargetd31fb558B65FB3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "aws:SourceAccount": "034362045434",
                  "aws:SourceArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":scheduler:ap-northeast-1:034362045434:schedule-group/default",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "scheduler.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SchedulerRoleForTargetd31fb5DefaultPolicyF6698B01": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:StopInstances",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SchedulerRoleForTargetd31fb5DefaultPolicyF6698B01",
        "Roles": [
          {
            "Ref": "SchedulerRoleForTargetd31fb558B65FB3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
